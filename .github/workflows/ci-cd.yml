name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-dependencies.outputs.cache-hit }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Java
        id: setup-java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache Maven dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-

  build:
    runs-on: ubuntu-latest
    needs: [ setup ]
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: tech_hive_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Restore Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Build Docker image
        id: build-image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/tech-hive-store:${{ github.sha }} .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/tech-hive-store:${{ github.sha }}

  vulnerability_scan:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Restore Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/tech-hive-store:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: [ vulnerability_scan ]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Ship Image to Docker Hub
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/tech-hive-store:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/tech-hive-store:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/tech-hive-store:latest

  job_summary:
    runs-on: ubuntu-latest
    needs: [ release ]
    steps:
      - name: Create Job Summary
        run: |
          echo "## CI/CD Pipeline Summary" >> $GITHUB_STEP_SUM
