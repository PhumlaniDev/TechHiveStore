name: CI/CD Pipeline (Orchestration)

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      run_lint:
        description: 'Run Linting'
        required: true
        default: 'true'
        type: choice
        options:
          - "true"
          - "false"
      run_build:
        description: 'Run Build'
        required: true
        default: 'true'
        type: choice
        options:
          - "true"
          - "false"
      run_unit_tests:
        description: 'Run Unit Tests'
        required: true
        default: 'true'
        type: choice
        options:
          - "true"
          - "false"
      run_code_analysis:
        description: 'Run Code Analysis'
        required: true
        default: 'true'
        type: choice
        options:
          - "true"
          - "false"
      run_integration_tests:
        description: 'Run Integration Tests'
        required: true
        default: 'true'
        type: choice
        options:
          - "true"
          - "false"
      run_publish:
        description: 'Publish Maven Artifact'
        required: true
        default: 'true'
        type: choice
        options:
          - "true"
          - "false"
      run_vulnerability_scan:
        description: 'Run Vulnerability Scan'
        required: true
        default: 'true'
        type: choice
        options:
          - "true"
          - "false"
      run_release:
        description: 'Run Release'
        required: true
        default: 'true'
        type: choice
        options:
          - "true"
          - "false"
      run_job_summary:
        description: 'Run Job Summary'
        required: true
        default: 'true'
        type: choice
        options:
          - "true"
          - "false"

jobs:
  orchestrate:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Other Workflow
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const { data: workflows } = await github.actions.listRepoWorkflows({ owner: context.repo.owner, repo: context.repo.repo });
            const workflow = workflows.workflows.find(workflow => workflow.name === 'CI/CD Pipeline (Other Jobs)');
            if (!workflow) {
              throw new Error('Workflow not found');
            }
            const workflowId = workflow.id;
            if (!context.payload.inputs) {
              throw new Error('No inputs found in context.payload');
            }
            console.log('Inputs:', JSON.stringify(context.payload.inputs, null, 2));
            await github.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: workflowId,
              ref: 'main',
              inputs: {
                run_lint: context.payload.inputs.run_lint,
                run_build: context.payload.inputs.run_build,
                run_unit_tests: context.payload.inputs.run_unit_tests,
                run_code_analysis: context.payload.inputs.run_code_analysis,
                run_integration_tests: context.payload.inputs.run_integration_tests,
                run_publish: context.payload.inputs.run_publish,
                run_vulnerability_scan: context.payload.inputs.run_vulnerability_scan,
                run_release: context.payload.inputs.run_release,
                run_job_summary: context.payload.inputs.run_job_summary
              }
            });
